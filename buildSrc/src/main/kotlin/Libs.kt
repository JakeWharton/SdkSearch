import kotlin.String

/**
 * Generated by [gradle-kotlin-dsl-libs](https://github.com/jmfayard/gradle-kotlin-dsl-libs)
 *
 * Run again
 *   `$ ./gradlew syncLibs`
 * to update this file */
object Libs {
    /**
     * [android-driver website](https://github.com/square/sqldelight/) */
    const val android_driver: String =
            "com.squareup.sqldelight:android-driver:" + Versions.android_driver

    /**
     * [runner website](https://developer.android.com/testing) */
    const val androidx_test_runner: String = "androidx.test:runner:" + Versions.androidx_test_runner

    /**
     * [api website](https://github.com/ansman/kotshi) */
    const val api: String = "se.ansman.kotshi:api:" + Versions.api

    /**
     * [appcompat website](http://developer.android.com/tools/extras/support-library.html) */
    const val appcompat: String = "androidx.appcompat:appcompat:" + Versions.appcompat

    /**
     * [browser website](http://developer.android.com/tools/extras/support-library.html) */
    const val browser: String = "androidx.browser:browser:" + Versions.browser

    /**
     * [bugsnag-android website](https://bugsnag.com) */
    const val bugsnag_android: String = "com.bugsnag:bugsnag-android:" + Versions.bugsnag_android

    const val byteunits: String = "com.jakewharton.byteunits:byteunits:" + Versions.byteunits

    /**
     * [gradle website](https://developer.android.com/studio) */
    const val com_android_tools_build_gradle: String =
            "com.android.tools.build:gradle:" + Versions.com_android_tools_build_gradle

    /**
     * [runtime website](https://github.com/square/sqldelight/) */
    const val com_squareup_sqldelight_runtime: String =
            "com.squareup.sqldelight:runtime:" + Versions.com_squareup_sqldelight_runtime

    /**
     * [constraintlayout website](http://tools.android.com) */
    const val constraintlayout: String =
            "androidx.constraintlayout:constraintlayout:" + Versions.constraintlayout

    /**
     * [converter-moshi website](https://github.com/square/retrofit/) */
    const val converter_moshi: String =
            "com.squareup.retrofit2:converter-moshi:" + Versions.converter_moshi

    /**
     * [core-ktx website](http://developer.android.com/tools/extras/support-library.html) */
    const val core_ktx: String = "androidx.core:core-ktx:" + Versions.core_ktx

    /**
     * [dagger website](https://github.com/google/dagger) */
    const val dagger: String = "com.google.dagger:dagger:" + Versions.dagger

    /**
     * [dagger-android website](https://github.com/google/dagger) */
    const val dagger_android: String = "com.google.dagger:dagger-android:" + Versions.dagger_android

    /**
     * [dagger-android-processor website](https://github.com/google/dagger) */
    const val dagger_android_processor: String =
            "com.google.dagger:dagger-android-processor:" + Versions.dagger_android_processor

    /**
     * [dagger-compiler website](https://github.com/google/dagger) */
    const val dagger_compiler: String =
            "com.google.dagger:dagger-compiler:" + Versions.dagger_compiler

    const val gradle_node_plugin: String =
            "com.moowork.gradle:gradle-node-plugin:" + Versions.gradle_node_plugin

    /**
     * [gradle-plugin website](https://github.com/square/sqldelight/) */
    const val gradle_plugin: String =
            "com.squareup.sqldelight:gradle-plugin:" + Versions.gradle_plugin

    const val jmfayard_github_io_gradle_kotlin_dsl_libs_gradle_plugin: String =
            "jmfayard.github.io.gradle-kotlin-dsl-libs:jmfayard.github.io.gradle-kotlin-dsl-libs.gradle.plugin:" + Versions.jmfayard_github_io_gradle_kotlin_dsl_libs_gradle_plugin

    /**
     * [kotlin-android-extensions website](https://kotlinlang.org/) */
    const val kotlin_android_extensions: String =
            "org.jetbrains.kotlin:kotlin-android-extensions:" + Versions.kotlin_android_extensions

    /**
     * [kotlin-android-extensions-runtime website](https://kotlinlang.org/) */
    const val kotlin_android_extensions_runtime: String =
            "org.jetbrains.kotlin:kotlin-android-extensions-runtime:" + Versions.kotlin_android_extensions_runtime

    /**
     * [kotlin-annotation-processing-gradle website](https://kotlinlang.org/) */
    const val kotlin_annotation_processing_gradle: String =
            "org.jetbrains.kotlin:kotlin-annotation-processing-gradle:" + Versions.kotlin_annotation_processing_gradle

    /**
     * [kotlin-argparser website](https://github.com/xenomachina/kotlin-argparser) */
    const val kotlin_argparser: String =
            "com.xenomachina:kotlin-argparser:" + Versions.kotlin_argparser

    const val kotlin_frontend_plugin: String =
            "org.jetbrains.kotlin:kotlin-frontend-plugin:" + Versions.kotlin_frontend_plugin

    /**
     * [kotlin-gradle-plugin website](https://kotlinlang.org/) */
    const val kotlin_gradle_plugin: String =
            "org.jetbrains.kotlin:kotlin-gradle-plugin:" + Versions.kotlin_gradle_plugin

    /**
     * [kotlin-scripting-compiler-embeddable website](https://kotlinlang.org/) */
    const val kotlin_scripting_compiler_embeddable: String =
            "org.jetbrains.kotlin:kotlin-scripting-compiler-embeddable:" + Versions.kotlin_scripting_compiler_embeddable

    /**
     * [kotlin-serialization website](https://kotlinlang.org/) */
    const val kotlin_serialization: String =
            "org.jetbrains.kotlin:kotlin-serialization:" + Versions.kotlin_serialization

    /**
     * [kotlin-serialization-unshaded website](https://kotlinlang.org/) */
    const val kotlin_serialization_unshaded: String =
            "org.jetbrains.kotlin:kotlin-serialization-unshaded:" + Versions.kotlin_serialization_unshaded

    /**
     * [kotlin-stdlib website](https://kotlinlang.org/) */
    const val kotlin_stdlib: String = "org.jetbrains.kotlin:kotlin-stdlib:" + Versions.kotlin_stdlib

    /**
     * [kotlin-stdlib-common website](https://kotlinlang.org/) */
    const val kotlin_stdlib_common: String =
            "org.jetbrains.kotlin:kotlin-stdlib-common:" + Versions.kotlin_stdlib_common

    /**
     * [kotlin-stdlib-js website](https://kotlinlang.org/) */
    const val kotlin_stdlib_js: String =
            "org.jetbrains.kotlin:kotlin-stdlib-js:" + Versions.kotlin_stdlib_js

    /**
     * [kotlin-test-annotations-common website](https://kotlinlang.org/) */
    const val kotlin_test_annotations_common: String =
            "org.jetbrains.kotlin:kotlin-test-annotations-common:" + Versions.kotlin_test_annotations_common

    /**
     * [kotlin-test-common website](https://kotlinlang.org/) */
    const val kotlin_test_common: String =
            "org.jetbrains.kotlin:kotlin-test-common:" + Versions.kotlin_test_common

    /**
     * [kotlin-test-js website](https://kotlinlang.org/) */
    const val kotlin_test_js: String =
            "org.jetbrains.kotlin:kotlin-test-js:" + Versions.kotlin_test_js

    /**
     * [kotlin-test-junit website](https://kotlinlang.org/) */
    const val kotlin_test_junit: String =
            "org.jetbrains.kotlin:kotlin-test-junit:" + Versions.kotlin_test_junit

    /**
     * [kotlinx-coroutines-android website](https://github.com/Kotlin/kotlinx.coroutines) */
    const val kotlinx_coroutines_android: String =
            "org.jetbrains.kotlinx:kotlinx-coroutines-android:" + Versions.kotlinx_coroutines_android

    /**
     * [kotlinx-coroutines-core website](https://github.com/Kotlin/kotlinx.coroutines) */
    const val kotlinx_coroutines_core: String =
            "org.jetbrains.kotlinx:kotlinx-coroutines-core:" + Versions.kotlinx_coroutines_core

    /**
     * [kotlinx-coroutines-core-common website](https://github.com/Kotlin/kotlinx.coroutines) */
    const val kotlinx_coroutines_core_common: String =
            "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:" + Versions.kotlinx_coroutines_core_common

    /**
     * [kotlinx-coroutines-core-js website](https://github.com/Kotlin/kotlinx.coroutines) */
    const val kotlinx_coroutines_core_js: String =
            "org.jetbrains.kotlinx:kotlinx-coroutines-core-js:" + Versions.kotlinx_coroutines_core_js

    const val kotlinx_serialization_runtime: String =
            "org.jetbrains.kotlinx:kotlinx-serialization-runtime:" + Versions.kotlinx_serialization_runtime

    const val kotlinx_serialization_runtime_common: String =
            "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:" + Versions.kotlinx_serialization_runtime_common

    const val kotlinx_serialization_runtime_js: String =
            "org.jetbrains.kotlinx:kotlinx-serialization-runtime-js:" + Versions.kotlinx_serialization_runtime_js

    /**
     * [ktlint website](https://github.com/shyiko/ktlint) */
    const val ktlint: String = "com.github.shyiko:ktlint:" + Versions.ktlint

    const val ktlint_gradle: String =
            "gradle.plugin.org.jlleitschuh.gradle:ktlint-gradle:" + Versions.ktlint_gradle

    /**
     * [lint-gradle website](https://developer.android.com/studio) */
    const val lint_gradle: String = "com.android.tools.lint:lint-gradle:" + Versions.lint_gradle

    /**
     * [logging-interceptor website](https://github.com/square/okhttp) */
    const val logging_interceptor: String =
            "com.squareup.okhttp3:logging-interceptor:" + Versions.logging_interceptor

    /**
     * [material website](http://developer.android.com/tools/extras/support-library.html) */
    const val material: String = "com.google.android.material:material:" + Versions.material

    /**
     * [moshi website](https://github.com/square/moshi) */
    const val moshi: String = "com.squareup.moshi:moshi:" + Versions.moshi

    /**
     * [okhttp website](https://github.com/square/okhttp) */
    const val okhttp: String = "com.squareup.okhttp3:okhttp:" + Versions.okhttp

    /**
     * [okio website](https://github.com/square/okio/) */
    const val okio: String = "com.squareup.okio:okio:" + Versions.okio

    /**
     * [recyclerview website](http://developer.android.com/tools/extras/support-library.html) */
    const val recyclerview: String = "androidx.recyclerview:recyclerview:" + Versions.recyclerview

    /**
     * [retrofit website](https://github.com/square/retrofit/) */
    const val retrofit: String = "com.squareup.retrofit2:retrofit:" + Versions.retrofit

    /**
     * [retrofit2-kotlin-coroutines-adapter website](https://github.com/JakeWharton/retrofit2-kotlin-coroutines-adapter/) */
    const val retrofit2_kotlin_coroutines_adapter: String =
            "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:" + Versions.retrofit2_kotlin_coroutines_adapter

    /**
     * [retrofit2-kotlinx-serialization-converter website](https://github.com/JakeWharton/retrofit2-kotlinx-serialization-converter/) */
    const val retrofit2_kotlinx_serialization_converter: String =
            "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:" + Versions.retrofit2_kotlinx_serialization_converter

    /**
     * [runtime-js website](https://github.com/square/sqldelight/) */
    const val runtime_js: String = "com.squareup.sqldelight:runtime-js:" + Versions.runtime_js

    /**
     * [runtime-jvm website](https://github.com/square/sqldelight/) */
    const val runtime_jvm: String = "com.squareup.sqldelight:runtime-jvm:" + Versions.runtime_jvm

    /**
     * [runtime-metadata website](https://github.com/square/sqldelight/) */
    const val runtime_metadata: String =
            "com.squareup.sqldelight:runtime-metadata:" + Versions.runtime_metadata

    /**
     * [compiler website](https://github.com/ansman/kotshi) */
    const val se_ansman_kotshi_compiler: String =
            "se.ansman.kotshi:compiler:" + Versions.se_ansman_kotshi_compiler

    /**
     * [sqlite-framework website](https://developer.android.com/topic/libraries/architecture/index.html) */
    const val sqlite_framework: String =
            "androidx.sqlite:sqlite-framework:" + Versions.sqlite_framework

    const val timber_android: String =
            "com.jakewharton.timber:timber-android:" + Versions.timber_android

    const val timber_common: String =
            "com.jakewharton.timber:timber-common:" + Versions.timber_common

    const val timber_jdk: String = "com.jakewharton.timber:timber-jdk:" + Versions.timber_jdk

    const val timber_js: String = "com.jakewharton.timber:timber-js:" + Versions.timber_js

    /**
     * [truth website](http://github.com/google/truth) */
    const val truth: String = "com.google.truth:truth:" + Versions.truth
}
